from flask import Flask, request, jsonify
import spacy
import PyPDF2
import docx
import os

app = Flask(__name__)

# Load NLP Model
nlp = spacy.load("en_core_web_sm")

UPLOAD_FOLDER = "uploads"
app.config["UPLOAD_FOLDER"] = UPLOAD_FOLDER

# Function to extract text from PDF
def extract_text_from_pdf(file_path):
    with open(file_path, "rb") as f:
        reader = PyPDF2.PdfReader(f)
        text = " ".join([page.extract_text() for page in reader.pages if page.extract_text()])
    return text

# Function to extract text from DOCX
def extract_text_from_docx(file_path):
    doc = docx.Document(file_path)
    return " ".join([para.text for para in doc.paragraphs])

@app.route("/upload", methods=["POST"])
def upload_resume():
    if "file" not in request.files:
        return jsonify({"error": "No file uploaded"}), 400
    
    file = request.files["file"]
    filename = os.path.join(app.config["UPLOAD_FOLDER"], file.filename)
    file.save(filename)

    # Extract text based on file type
    if file.filename.endswith(".pdf"):
        resume_text = extract_text_from_pdf(filename)
    elif file.filename.endswith(".docx"):
        resume_text = extract_text_from_docx(filename)
    else:
        return jsonify({"error": "Unsupported file format"}), 400

    # NLP Processing
    doc = nlp(resume_text)
    skills = [ent.text for ent in doc.ents if ent.label_ == "SKILL"]  # Extract skills
    keywords = set([token.lemma_ for token in doc if token.is_alpha and not token.is_stop])  # Extract keywords

    return jsonify({"skills": skills, "keywords": list(keywords)})

if __name__ == "__main__":
    app.run(debug=True)
